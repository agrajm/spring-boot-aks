variables:
  - group: buildVariableGroup      # variables for build pipeline (terraform state)
  - group: terraformVariableGroup  # non-secret values
  - group: secretVariables         # secret values from key vault

pool:
  vmImage: ubuntu-latest

steps:

- task: AzureCLI@2
  displayName: "Using Terraform to build Infrastructure"
  inputs:
    azureSubscription: azureServiceConnection
    scriptType: bash
    scriptLocation: inlineScript
    failOnStandardError: true
    workingDirectory: $(System.DefaultWorkingDirectory)/src/terraform
    addSpnToEnvironment: true
    inlineScript: |
      export ARM_CLIENT_ID=$servicePrincipalId
      export ARM_CLIENT_SECRET=$servicePrincipalKey
      export ARM_TENANT_ID=$tenantId
      export ARM_SUBSCRIPTION_ID=$(az account show --query id | xargs)
      export ACCESS_KEY=$(az keyvault secret show --name tfstate-storage-key --vault-name $KEYVAULT_NAME --query value -o tsv)
      terraform init \
        -backend-config="storage_account_name=$TF_STATE_STORAGE_ACCOUNT_NAME" \
        -backend-config="container_name=$TF_STATE_CONTAINER_NAME" \
        -backend-config="key=terraform-ref-architecture-tfstate" \
        -backend-config="access_key=$ACCESS_KEY"
      export TF_VAR_aks_admin_group_id=$(aks-admin-group-object-id)
      export TF_VAR_sql_db_name=$(SQL-DB-NAME)
      export TF_VAR_sql_server_name=$(SQL-SERVER-NAME)
      export TF_VAR_sql_server_admin_login=$(SQL-SERVER-ADMIN-LOGIN)
      export TF_VAR_sql_server_admin_pwd=$(SQL-SERVER-ADMIN-PWD)
      terraform plan -out=infra.out
      terraform apply -auto-approve infra.out
      # attach the ACR to AKS
      ACR_NAME=$(terraform output -raw acr_name)
      AKS_CLUSTER_NAME=$(terraform output -raw aks_cluster_name)
      AKS_RESOURCE_GROUP=$(terraform output -raw aks_resource_group)
      #az aks update --resource-group $AKS_RESOURCE_GROUP --name $AKS_CLUSTER_NAME --attach-acr $ACR_NAME

